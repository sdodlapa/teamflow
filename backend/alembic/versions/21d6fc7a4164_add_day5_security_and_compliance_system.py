"""add_day5_security_and_compliance_system

Revision ID: 21d6fc7a4164
Revises: day_3_part_1
Create Date: 2025-09-24 12:05:44.251877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '21d6fc7a4164'
down_revision: Union[str, None] = 'day_3_part_1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comment_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('activity_data', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['task_comments_enhanced.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_activities_activity_type'), 'comment_activities', ['activity_type'], unique=False)
    op.create_index(op.f('ix_comment_activities_comment_id'), 'comment_activities', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_activities_created_at'), 'comment_activities', ['created_at'], unique=False)
    op.create_index(op.f('ix_comment_activities_id'), 'comment_activities', ['id'], unique=False)
    op.create_index(op.f('ix_comment_activities_user_id'), 'comment_activities', ['user_id'], unique=False)
    op.create_table('comment_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attachment_order', sa.Integer(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('attachment_type', sa.String(length=50), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('attachment_metadata', sa.JSON(), nullable=True),
    sa.Column('is_inline', sa.Boolean(), nullable=False),
    sa.Column('show_thumbnail', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['task_comments_enhanced.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file_uploads.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_attachments_comment_id'), 'comment_attachments', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_attachments_file_id'), 'comment_attachments', ['file_id'], unique=False)
    op.create_index(op.f('ix_comment_attachments_id'), 'comment_attachments', ['id'], unique=False)
    op.create_table('comment_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['task_comments_enhanced.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_likes_comment_id'), 'comment_likes', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_likes_created_at'), 'comment_likes', ['created_at'], unique=False)
    op.create_index(op.f('ix_comment_likes_id'), 'comment_likes', ['id'], unique=False)
    op.create_index(op.f('ix_comment_likes_user_id'), 'comment_likes', ['user_id'], unique=False)
    op.create_table('comment_mentions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('mentioned_user_id', sa.Integer(), nullable=False),
    sa.Column('mentioning_user_id', sa.Integer(), nullable=False),
    sa.Column('mention_text', sa.String(length=100), nullable=False),
    sa.Column('context_start', sa.Integer(), nullable=False),
    sa.Column('context_end', sa.Integer(), nullable=False),
    sa.Column('context_snippet', sa.String(length=200), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_notified', sa.Boolean(), nullable=False),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['task_comments_enhanced.id'], ),
    sa.ForeignKeyConstraint(['mentioned_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['mentioning_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_mentions_comment_id'), 'comment_mentions', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_mentions_created_at'), 'comment_mentions', ['created_at'], unique=False)
    op.create_index(op.f('ix_comment_mentions_id'), 'comment_mentions', ['id'], unique=False)
    op.create_index(op.f('ix_comment_mentions_mentioned_user_id'), 'comment_mentions', ['mentioned_user_id'], unique=False)
    op.create_index(op.f('ix_comment_mentions_mentioning_user_id'), 'comment_mentions', ['mentioning_user_id'], unique=False)
    op.create_table('comment_reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('emoji', sa.String(length=10), nullable=False),
    sa.Column('emoji_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['task_comments_enhanced.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_reactions_comment_id'), 'comment_reactions', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_reactions_created_at'), 'comment_reactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_comment_reactions_emoji'), 'comment_reactions', ['emoji'], unique=False)
    op.create_index(op.f('ix_comment_reactions_id'), 'comment_reactions', ['id'], unique=False)
    op.create_index(op.f('ix_comment_reactions_user_id'), 'comment_reactions', ['user_id'], unique=False)
    op.drop_index('ix_bottleneck_analyses_uuid', table_name='bottleneck_analyses')
    op.create_index(op.f('ix_bottleneck_analyses_uuid'), 'bottleneck_analyses', ['uuid'], unique=True)
    op.add_column('project_health_metrics', sa.Column('assessment_date', sa.DateTime(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('overall_health_score', sa.Float(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('velocity_score', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('team_satisfaction', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('deadline_risk', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('budget_risk', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('resource_risk', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('technical_risk', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('health_trend', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('predicted_completion_date', sa.DateTime(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('predicted_budget_usage', sa.Float(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('critical_issues', sa.JSON(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('action_items', sa.JSON(), nullable=True))
    op.alter_column('project_health_metrics', 'quality_score',
               existing_type=sa.FLOAT(),
               nullable=True)
    op.drop_index('ix_project_health_metrics_uuid', table_name='project_health_metrics')
    op.create_index(op.f('ix_project_health_metrics_uuid'), 'project_health_metrics', ['uuid'], unique=True)
    op.drop_column('project_health_metrics', 'health_score')
    op.drop_column('project_health_metrics', 'team_satisfaction_score')
    op.drop_column('project_health_metrics', 'completion_percentage')
    op.drop_column('project_health_metrics', 'on_schedule_score')
    op.drop_column('project_health_metrics', 'overdue_tasks_count')
    op.drop_column('project_health_metrics', 'critical_issues_count')
    op.drop_column('project_health_metrics', 'budget_health_score')
    op.drop_column('project_health_metrics', 'risk_score')
    op.drop_column('project_health_metrics', 'blockers_count')
    op.drop_column('project_health_metrics', 'velocity_trend')
    op.add_column('smart_assignment_logs', sa.Column('assignment_method', sa.String(length=50), nullable=False))
    op.add_column('smart_assignment_logs', sa.Column('candidate_users', sa.JSON(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('scoring_details', sa.JSON(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('skill_match_score', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('workload_score', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('availability_score', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('performance_score', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('final_score', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('assignment_success', sa.Boolean(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('completion_time', sa.Float(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('quality_rating', sa.Float(), nullable=True))
    op.alter_column('smart_assignment_logs', 'algorithm_version',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               nullable=True)
    op.drop_index('ix_smart_assignment_logs_uuid', table_name='smart_assignment_logs')
    op.create_index(op.f('ix_smart_assignment_logs_uuid'), 'smart_assignment_logs', ['uuid'], unique=True)
    op.drop_constraint(None, 'smart_assignment_logs', type_='foreignkey')
    op.drop_column('smart_assignment_logs', 'alternative_candidates')
    op.drop_column('smart_assignment_logs', 'assignment_effectiveness')
    op.drop_column('smart_assignment_logs', 'override_reason')
    op.drop_column('smart_assignment_logs', 'manual_override')
    op.drop_column('smart_assignment_logs', 'assigned_by_user_id')
    op.drop_column('smart_assignment_logs', 'confidence_score')
    op.drop_column('smart_assignment_logs', 'assignment_factors')
    op.add_column('task_comments_enhanced', sa.Column('content_html', sa.Text(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('like_count', sa.Integer(), nullable=False))
    op.add_column('task_comments_enhanced', sa.Column('reply_count', sa.Integer(), nullable=False))
    op.add_column('task_comments_enhanced', sa.Column('view_count', sa.Integer(), nullable=False))
    op.add_column('task_comments_enhanced', sa.Column('edited_at', sa.DateTime(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('edited_by', sa.Integer(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.alter_column('task_comments_enhanced', 'thread_depth',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('task_comments_enhanced', 'is_edited',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('task_comments_enhanced', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('task_comments_enhanced', 'is_resolved',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint(None, 'task_comments_enhanced', type_='foreignkey')
    op.create_foreign_key(None, 'task_comments_enhanced', 'users', ['edited_by'], ['id'])
    op.drop_column('task_comments_enhanced', 'priority_level')
    op.drop_column('task_comments_enhanced', 'attachments_count')
    op.drop_column('task_comments_enhanced', 'likes_count')
    op.drop_column('task_comments_enhanced', 'mentions_count')
    op.drop_column('task_comments_enhanced', 'visibility')
    op.drop_column('task_comments_enhanced', 'last_edited_by')
    op.drop_column('task_comments_enhanced', 'comment_type')
    op.drop_column('task_comments_enhanced', 'last_edited_at')
    op.add_column('task_complexity_estimations', sa.Column('complexity_type', sa.Enum('TRIVIAL', 'SIMPLE', 'MODERATE', 'COMPLEX', 'CRITICAL', name='taskcomplexitytype'), nullable=False))
    op.add_column('task_complexity_estimations', sa.Column('confidence_level', sa.Float(), nullable=False))
    op.add_column('task_complexity_estimations', sa.Column('description_complexity', sa.Float(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('skill_requirements_score', sa.Float(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('dependency_complexity', sa.Float(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('historical_similarity', sa.Float(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('model_version', sa.String(length=50), nullable=False))
    op.add_column('task_complexity_estimations', sa.Column('feature_weights', sa.JSON(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('human_validation', sa.Integer(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('actual_complexity', sa.Integer(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('accuracy_score', sa.Float(), nullable=True))
    op.drop_index('ix_task_complexity_estimations_uuid', table_name='task_complexity_estimations')
    op.create_index(op.f('ix_task_complexity_estimations_uuid'), 'task_complexity_estimations', ['uuid'], unique=True)
    op.drop_constraint(None, 'task_complexity_estimations', type_='foreignkey')
    op.drop_column('task_complexity_estimations', 'skill_requirements')
    op.drop_column('task_complexity_estimations', 'validation_status')
    op.drop_column('task_complexity_estimations', 'override_reason')
    op.drop_column('task_complexity_estimations', 'manual_override')
    op.drop_column('task_complexity_estimations', 'estimated_hours')
    op.drop_column('task_complexity_estimations', 'algorithm_version')
    op.drop_column('task_complexity_estimations', 'confidence_score')
    op.drop_column('task_complexity_estimations', 'estimated_by_user_id')
    op.add_column('task_productivity_metrics', sa.Column('time_to_completion', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('estimation_accuracy', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('revision_efficiency', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('complexity_accuracy', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('actual_complexity_score', sa.Integer(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('blocked_time_hours', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('stakeholder_satisfaction', sa.Float(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('calculation_date', sa.DateTime(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('metrics_version', sa.String(length=20), nullable=True))
    op.drop_index('ix_task_productivity_metrics_uuid', table_name='task_productivity_metrics')
    op.create_index(op.f('ix_task_productivity_metrics_uuid'), 'task_productivity_metrics', ['uuid'], unique=True)
    op.drop_constraint(None, 'task_productivity_metrics', type_='foreignkey')
    op.drop_column('task_productivity_metrics', 'context_switches')
    op.drop_column('task_productivity_metrics', 'blocked_hours')
    op.drop_column('task_productivity_metrics', 'focus_time_hours')
    op.drop_column('task_productivity_metrics', 'collaboration_score')
    op.drop_column('task_productivity_metrics', 'efficiency_score')
    op.drop_column('task_productivity_metrics', 'time_to_completion_hours')
    op.drop_column('task_productivity_metrics', 'productivity_score')
    op.drop_column('task_productivity_metrics', 'interruption_count')
    op.drop_column('task_productivity_metrics', 'user_id')
    op.alter_column('tasks', 'estimated_hours',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('tasks', 'actual_hours',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.create_foreign_key(None, 'tasks', 'workflow_executions', ['workflow_execution_id'], ['id'])
    op.add_column('team_performance_metrics', sa.Column('tasks_completed', sa.Integer(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('tasks_completed_on_time', sa.Integer(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('avg_task_completion_time', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('avg_complexity_score', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('avg_quality_score', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('avg_revision_count', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('customer_satisfaction', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('productivity_trend', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('efficiency_score', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('bottleneck_areas', sa.JSON(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('communication_score', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('collaboration_index', sa.Float(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('capacity_utilization', sa.Float(), nullable=True))
    op.drop_index('ix_team_performance_metrics_uuid', table_name='team_performance_metrics')
    op.create_index(op.f('ix_team_performance_metrics_uuid'), 'team_performance_metrics', ['uuid'], unique=True)
    op.drop_column('team_performance_metrics', 'quality_score')
    op.drop_column('team_performance_metrics', 'avg_completion_time_hours')
    op.drop_column('team_performance_metrics', 'workload_balance_score')
    op.drop_column('team_performance_metrics', 'skill_coverage_score')
    op.drop_column('team_performance_metrics', 'bottleneck_count')
    op.drop_column('team_performance_metrics', 'collaboration_score')
    op.drop_column('team_performance_metrics', 'improvement_suggestions')
    op.drop_column('team_performance_metrics', 'productivity_score')
    op.drop_column('team_performance_metrics', 'total_tasks_completed')
    op.add_column('workflow_execution_analytics', sa.Column('execution_name', sa.String(length=200), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('current_step', sa.Integer(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('execution_data', sa.JSON(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('error_details', sa.JSON(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('completion_percentage', sa.Float(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('paused_at', sa.DateTime(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('estimated_duration', sa.Integer(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('actual_duration', sa.Integer(), nullable=True))
    op.drop_index('ix_workflow_execution_analytics_uuid', table_name='workflow_execution_analytics')
    op.create_index(op.f('ix_workflow_execution_analytics_uuid'), 'workflow_execution_analytics', ['uuid'], unique=True)
    op.drop_constraint(None, 'workflow_execution_analytics', type_='foreignkey')
    op.drop_column('workflow_execution_analytics', 'trigger_event')
    op.drop_column('workflow_execution_analytics', 'execution_time_seconds')
    op.drop_column('workflow_execution_analytics', 'error_message')
    op.drop_column('workflow_execution_analytics', 'failed_steps')
    op.drop_column('workflow_execution_analytics', 'completed_steps')
    op.drop_column('workflow_execution_analytics', 'triggered_by_user_id')
    op.drop_column('workflow_execution_analytics', 'execution_context')
    op.add_column('workflow_executions', sa.Column('workflow_template_id', sa.Integer(), nullable=True))
    op.alter_column('workflow_executions', 'workflow_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_workflow_executions_workflow_template_id'), 'workflow_executions', ['workflow_template_id'], unique=False)
    op.create_foreign_key(None, 'workflow_executions', 'workflow_templates', ['workflow_template_id'], ['id'])
    op.add_column('workflow_step_log_analytics', sa.Column('workflow_execution_id', sa.Integer(), nullable=False))
    op.add_column('workflow_step_log_analytics', sa.Column('step_number', sa.Integer(), nullable=False))
    op.add_column('workflow_step_log_analytics', sa.Column('input_data', sa.JSON(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('output_data', sa.JSON(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('duration_seconds', sa.Integer(), nullable=True))
    op.alter_column('workflow_step_log_analytics', 'step_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('workflow_step_log_analytics', 'status',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_index('ix_workflow_step_log_analytics_uuid', table_name='workflow_step_log_analytics')
    op.create_index(op.f('ix_workflow_step_log_analytics_uuid'), 'workflow_step_log_analytics', ['uuid'], unique=True)
    op.drop_constraint(None, 'workflow_step_log_analytics', type_='foreignkey')
    op.create_foreign_key(None, 'workflow_step_log_analytics', 'workflow_execution_analytics', ['workflow_execution_id'], ['id'])
    op.drop_column('workflow_step_log_analytics', 'execution_time_seconds')
    op.drop_column('workflow_step_log_analytics', 'workflow_execution_analytics_id')
    op.drop_column('workflow_step_log_analytics', 'step_output')
    op.drop_column('workflow_step_log_analytics', 'conditions_met')
    op.drop_column('workflow_step_log_analytics', 'step_order')
    op.drop_column('workflow_step_log_analytics', 'conditions_data')
    op.drop_column('workflow_step_log_analytics', 'step_input')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workflow_step_log_analytics', sa.Column('step_input', sa.TEXT(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('conditions_data', sa.TEXT(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('step_order', sa.INTEGER(), nullable=False))
    op.add_column('workflow_step_log_analytics', sa.Column('conditions_met', sa.BOOLEAN(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('step_output', sa.TEXT(), nullable=True))
    op.add_column('workflow_step_log_analytics', sa.Column('workflow_execution_analytics_id', sa.INTEGER(), nullable=False))
    op.add_column('workflow_step_log_analytics', sa.Column('execution_time_seconds', sa.FLOAT(), nullable=True))
    op.drop_constraint(None, 'workflow_step_log_analytics', type_='foreignkey')
    op.create_foreign_key(None, 'workflow_step_log_analytics', 'workflow_execution_analytics', ['workflow_execution_analytics_id'], ['id'])
    op.drop_index(op.f('ix_workflow_step_log_analytics_uuid'), table_name='workflow_step_log_analytics')
    op.create_index('ix_workflow_step_log_analytics_uuid', 'workflow_step_log_analytics', ['uuid'], unique=False)
    op.alter_column('workflow_step_log_analytics', 'status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=9),
               existing_nullable=False)
    op.alter_column('workflow_step_log_analytics', 'step_name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('workflow_step_log_analytics', 'duration_seconds')
    op.drop_column('workflow_step_log_analytics', 'output_data')
    op.drop_column('workflow_step_log_analytics', 'input_data')
    op.drop_column('workflow_step_log_analytics', 'step_number')
    op.drop_column('workflow_step_log_analytics', 'workflow_execution_id')
    op.drop_constraint(None, 'workflow_executions', type_='foreignkey')
    op.drop_index(op.f('ix_workflow_executions_workflow_template_id'), table_name='workflow_executions')
    op.alter_column('workflow_executions', 'workflow_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('workflow_executions', 'workflow_template_id')
    op.add_column('workflow_execution_analytics', sa.Column('execution_context', sqlite.JSON(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('triggered_by_user_id', sa.INTEGER(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('completed_steps', sa.INTEGER(), nullable=False))
    op.add_column('workflow_execution_analytics', sa.Column('failed_steps', sa.INTEGER(), nullable=False))
    op.add_column('workflow_execution_analytics', sa.Column('error_message', sa.TEXT(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('execution_time_seconds', sa.FLOAT(), nullable=True))
    op.add_column('workflow_execution_analytics', sa.Column('trigger_event', sa.VARCHAR(length=100), nullable=True))
    op.create_foreign_key(None, 'workflow_execution_analytics', 'users', ['triggered_by_user_id'], ['id'])
    op.drop_index(op.f('ix_workflow_execution_analytics_uuid'), table_name='workflow_execution_analytics')
    op.create_index('ix_workflow_execution_analytics_uuid', 'workflow_execution_analytics', ['uuid'], unique=False)
    op.drop_column('workflow_execution_analytics', 'actual_duration')
    op.drop_column('workflow_execution_analytics', 'estimated_duration')
    op.drop_column('workflow_execution_analytics', 'paused_at')
    op.drop_column('workflow_execution_analytics', 'completion_percentage')
    op.drop_column('workflow_execution_analytics', 'error_details')
    op.drop_column('workflow_execution_analytics', 'execution_data')
    op.drop_column('workflow_execution_analytics', 'current_step')
    op.drop_column('workflow_execution_analytics', 'execution_name')
    op.add_column('team_performance_metrics', sa.Column('total_tasks_completed', sa.INTEGER(), nullable=False))
    op.add_column('team_performance_metrics', sa.Column('productivity_score', sa.FLOAT(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('improvement_suggestions', sqlite.JSON(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('collaboration_score', sa.FLOAT(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('bottleneck_count', sa.INTEGER(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('skill_coverage_score', sa.FLOAT(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('workload_balance_score', sa.FLOAT(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('avg_completion_time_hours', sa.FLOAT(), nullable=True))
    op.add_column('team_performance_metrics', sa.Column('quality_score', sa.FLOAT(), nullable=True))
    op.drop_index(op.f('ix_team_performance_metrics_uuid'), table_name='team_performance_metrics')
    op.create_index('ix_team_performance_metrics_uuid', 'team_performance_metrics', ['uuid'], unique=False)
    op.drop_column('team_performance_metrics', 'capacity_utilization')
    op.drop_column('team_performance_metrics', 'collaboration_index')
    op.drop_column('team_performance_metrics', 'communication_score')
    op.drop_column('team_performance_metrics', 'bottleneck_areas')
    op.drop_column('team_performance_metrics', 'efficiency_score')
    op.drop_column('team_performance_metrics', 'productivity_trend')
    op.drop_column('team_performance_metrics', 'customer_satisfaction')
    op.drop_column('team_performance_metrics', 'avg_revision_count')
    op.drop_column('team_performance_metrics', 'avg_quality_score')
    op.drop_column('team_performance_metrics', 'avg_complexity_score')
    op.drop_column('team_performance_metrics', 'avg_task_completion_time')
    op.drop_column('team_performance_metrics', 'tasks_completed_on_time')
    op.drop_column('team_performance_metrics', 'tasks_completed')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.alter_column('tasks', 'actual_hours',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('tasks', 'estimated_hours',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.add_column('task_productivity_metrics', sa.Column('user_id', sa.INTEGER(), nullable=False))
    op.add_column('task_productivity_metrics', sa.Column('interruption_count', sa.INTEGER(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('productivity_score', sa.FLOAT(), nullable=False))
    op.add_column('task_productivity_metrics', sa.Column('time_to_completion_hours', sa.FLOAT(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('efficiency_score', sa.FLOAT(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('collaboration_score', sa.FLOAT(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('focus_time_hours', sa.FLOAT(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('blocked_hours', sa.FLOAT(), nullable=True))
    op.add_column('task_productivity_metrics', sa.Column('context_switches', sa.INTEGER(), nullable=True))
    op.create_foreign_key(None, 'task_productivity_metrics', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_task_productivity_metrics_uuid'), table_name='task_productivity_metrics')
    op.create_index('ix_task_productivity_metrics_uuid', 'task_productivity_metrics', ['uuid'], unique=False)
    op.drop_column('task_productivity_metrics', 'metrics_version')
    op.drop_column('task_productivity_metrics', 'calculation_date')
    op.drop_column('task_productivity_metrics', 'stakeholder_satisfaction')
    op.drop_column('task_productivity_metrics', 'blocked_time_hours')
    op.drop_column('task_productivity_metrics', 'actual_complexity_score')
    op.drop_column('task_productivity_metrics', 'complexity_accuracy')
    op.drop_column('task_productivity_metrics', 'revision_efficiency')
    op.drop_column('task_productivity_metrics', 'estimation_accuracy')
    op.drop_column('task_productivity_metrics', 'time_to_completion')
    op.add_column('task_complexity_estimations', sa.Column('estimated_by_user_id', sa.INTEGER(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('confidence_score', sa.FLOAT(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('algorithm_version', sa.VARCHAR(length=50), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('estimated_hours', sa.FLOAT(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('manual_override', sa.BOOLEAN(), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('override_reason', sa.VARCHAR(length=500), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('validation_status', sa.VARCHAR(length=50), nullable=True))
    op.add_column('task_complexity_estimations', sa.Column('skill_requirements', sa.TEXT(), nullable=True))
    op.create_foreign_key(None, 'task_complexity_estimations', 'users', ['estimated_by_user_id'], ['id'])
    op.drop_index(op.f('ix_task_complexity_estimations_uuid'), table_name='task_complexity_estimations')
    op.create_index('ix_task_complexity_estimations_uuid', 'task_complexity_estimations', ['uuid'], unique=False)
    op.drop_column('task_complexity_estimations', 'accuracy_score')
    op.drop_column('task_complexity_estimations', 'actual_complexity')
    op.drop_column('task_complexity_estimations', 'human_validation')
    op.drop_column('task_complexity_estimations', 'feature_weights')
    op.drop_column('task_complexity_estimations', 'model_version')
    op.drop_column('task_complexity_estimations', 'historical_similarity')
    op.drop_column('task_complexity_estimations', 'dependency_complexity')
    op.drop_column('task_complexity_estimations', 'skill_requirements_score')
    op.drop_column('task_complexity_estimations', 'description_complexity')
    op.drop_column('task_complexity_estimations', 'confidence_level')
    op.drop_column('task_complexity_estimations', 'complexity_type')
    op.add_column('task_comments_enhanced', sa.Column('last_edited_at', sa.DATETIME(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('comment_type', sa.VARCHAR(length=10), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('last_edited_by', sa.INTEGER(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('visibility', sa.VARCHAR(length=12), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('mentions_count', sa.INTEGER(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('likes_count', sa.INTEGER(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('attachments_count', sa.INTEGER(), nullable=True))
    op.add_column('task_comments_enhanced', sa.Column('priority_level', sa.VARCHAR(length=6), nullable=True))
    op.drop_constraint(None, 'task_comments_enhanced', type_='foreignkey')
    op.create_foreign_key(None, 'task_comments_enhanced', 'users', ['last_edited_by'], ['id'])
    op.alter_column('task_comments_enhanced', 'is_resolved',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('task_comments_enhanced', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('task_comments_enhanced', 'is_edited',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('task_comments_enhanced', 'thread_depth',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('task_comments_enhanced', 'is_active')
    op.drop_column('task_comments_enhanced', 'edited_by')
    op.drop_column('task_comments_enhanced', 'edited_at')
    op.drop_column('task_comments_enhanced', 'view_count')
    op.drop_column('task_comments_enhanced', 'reply_count')
    op.drop_column('task_comments_enhanced', 'like_count')
    op.drop_column('task_comments_enhanced', 'content_html')
    op.add_column('smart_assignment_logs', sa.Column('assignment_factors', sa.TEXT(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('confidence_score', sa.FLOAT(), nullable=False))
    op.add_column('smart_assignment_logs', sa.Column('assigned_by_user_id', sa.INTEGER(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('manual_override', sa.BOOLEAN(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('override_reason', sa.VARCHAR(length=500), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('assignment_effectiveness', sa.FLOAT(), nullable=True))
    op.add_column('smart_assignment_logs', sa.Column('alternative_candidates', sa.TEXT(), nullable=True))
    op.create_foreign_key(None, 'smart_assignment_logs', 'users', ['assigned_by_user_id'], ['id'])
    op.drop_index(op.f('ix_smart_assignment_logs_uuid'), table_name='smart_assignment_logs')
    op.create_index('ix_smart_assignment_logs_uuid', 'smart_assignment_logs', ['uuid'], unique=False)
    op.alter_column('smart_assignment_logs', 'algorithm_version',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('smart_assignment_logs', 'quality_rating')
    op.drop_column('smart_assignment_logs', 'completion_time')
    op.drop_column('smart_assignment_logs', 'assignment_success')
    op.drop_column('smart_assignment_logs', 'final_score')
    op.drop_column('smart_assignment_logs', 'performance_score')
    op.drop_column('smart_assignment_logs', 'availability_score')
    op.drop_column('smart_assignment_logs', 'workload_score')
    op.drop_column('smart_assignment_logs', 'skill_match_score')
    op.drop_column('smart_assignment_logs', 'scoring_details')
    op.drop_column('smart_assignment_logs', 'candidate_users')
    op.drop_column('smart_assignment_logs', 'assignment_method')
    op.add_column('project_health_metrics', sa.Column('velocity_trend', sa.FLOAT(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('blockers_count', sa.INTEGER(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('risk_score', sa.FLOAT(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('budget_health_score', sa.FLOAT(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('critical_issues_count', sa.INTEGER(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('overdue_tasks_count', sa.INTEGER(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('on_schedule_score', sa.FLOAT(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('completion_percentage', sa.FLOAT(), nullable=False))
    op.add_column('project_health_metrics', sa.Column('team_satisfaction_score', sa.FLOAT(), nullable=True))
    op.add_column('project_health_metrics', sa.Column('health_score', sa.FLOAT(), nullable=False))
    op.drop_index(op.f('ix_project_health_metrics_uuid'), table_name='project_health_metrics')
    op.create_index('ix_project_health_metrics_uuid', 'project_health_metrics', ['uuid'], unique=False)
    op.alter_column('project_health_metrics', 'quality_score',
               existing_type=sa.FLOAT(),
               nullable=False)
    op.drop_column('project_health_metrics', 'action_items')
    op.drop_column('project_health_metrics', 'critical_issues')
    op.drop_column('project_health_metrics', 'predicted_budget_usage')
    op.drop_column('project_health_metrics', 'predicted_completion_date')
    op.drop_column('project_health_metrics', 'health_trend')
    op.drop_column('project_health_metrics', 'technical_risk')
    op.drop_column('project_health_metrics', 'resource_risk')
    op.drop_column('project_health_metrics', 'budget_risk')
    op.drop_column('project_health_metrics', 'deadline_risk')
    op.drop_column('project_health_metrics', 'team_satisfaction')
    op.drop_column('project_health_metrics', 'velocity_score')
    op.drop_column('project_health_metrics', 'overall_health_score')
    op.drop_column('project_health_metrics', 'assessment_date')
    op.drop_index(op.f('ix_bottleneck_analyses_uuid'), table_name='bottleneck_analyses')
    op.create_index('ix_bottleneck_analyses_uuid', 'bottleneck_analyses', ['uuid'], unique=False)
    op.drop_index(op.f('ix_comment_reactions_user_id'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_id'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_emoji'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_created_at'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_comment_id'), table_name='comment_reactions')
    op.drop_table('comment_reactions')
    op.drop_index(op.f('ix_comment_mentions_mentioning_user_id'), table_name='comment_mentions')
    op.drop_index(op.f('ix_comment_mentions_mentioned_user_id'), table_name='comment_mentions')
    op.drop_index(op.f('ix_comment_mentions_id'), table_name='comment_mentions')
    op.drop_index(op.f('ix_comment_mentions_created_at'), table_name='comment_mentions')
    op.drop_index(op.f('ix_comment_mentions_comment_id'), table_name='comment_mentions')
    op.drop_table('comment_mentions')
    op.drop_index(op.f('ix_comment_likes_user_id'), table_name='comment_likes')
    op.drop_index(op.f('ix_comment_likes_id'), table_name='comment_likes')
    op.drop_index(op.f('ix_comment_likes_created_at'), table_name='comment_likes')
    op.drop_index(op.f('ix_comment_likes_comment_id'), table_name='comment_likes')
    op.drop_table('comment_likes')
    op.drop_index(op.f('ix_comment_attachments_id'), table_name='comment_attachments')
    op.drop_index(op.f('ix_comment_attachments_file_id'), table_name='comment_attachments')
    op.drop_index(op.f('ix_comment_attachments_comment_id'), table_name='comment_attachments')
    op.drop_table('comment_attachments')
    op.drop_index(op.f('ix_comment_activities_user_id'), table_name='comment_activities')
    op.drop_index(op.f('ix_comment_activities_id'), table_name='comment_activities')
    op.drop_index(op.f('ix_comment_activities_created_at'), table_name='comment_activities')
    op.drop_index(op.f('ix_comment_activities_comment_id'), table_name='comment_activities')
    op.drop_index(op.f('ix_comment_activities_activity_type'), table_name='comment_activities')
    op.drop_table('comment_activities')
    # ### end Alembic commands ###
