version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: teamflow-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-teamflow_dev}
      POSTGRES_USER: ${POSTGRES_USER:-teamflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-teamflow_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-teamflow}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: teamflow-redis-dev
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_dev_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: teamflow-backend-dev
    environment:
      - DATABASE_URL=postgresql://teamflow:teamflow_dev@postgres:5432/teamflow_dev
      - REDIS_URL=redis://:redis_dev_password@redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - ENVIRONMENT=development
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: teamflow-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000/ws
      - VITE_ENVIRONMENT=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

  # Email Testing (MailHog)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: teamflow-mailhog-dev
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP

  # Database Administration (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: teamflow-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@teamflow.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  pgadmin_data:

networks:
  default:
    name: teamflow-network